"use strict";var _load=require("../components/loadLibraries.js");async function init(e){e.lib={error:0},e.config={},e.PLATFORM_RECORDER=new Map,e.PLATFORM_RECORDER.set("linux","arecord"),e.PLATFORM_RECORDER.set("mac","sox"),e.PLATFORM_RECORDER.set("raspberry-pi","arecord"),e.PLATFORM_RECORDER.set("windows","sox")}async function parse(e){let o=await _load.libraries(e);if(o)return void console.error("[GA] [DATA] Warning:",o,"needed library not loaded !");e.lib.configMerge.check(e);var s=null;let r,n={version:require("../package.json").version,rev:require("../package.json").rev,lang:e.config.assistantConfig.lang};if(!e.lib.fs.existsSync(e.config.assistantConfig.modulePath+"/credentials.json"))return s="[FATAL] Assistant: credentials.json file not found !",this.error(e,s,{message:"GAErrorCredentials"});if(!e.lib.fs.existsSync(e.config.assistantConfig.modulePath+"/tokenGA.json"))return s="[FATAL] Assistant: tokenGA.json file not found !",this.error(e,s,{message:"GAErrorTokenGA"});try{r=e.lib.platform.getPlatform(e)}catch(s){return console.error("[GA] [DATA] Google Assistant does not support this platform. Supported platforms include macOS (x86_64), Windows (x86_64), Linux (x86_64), and Raspberry Pi"),void process.exit(1)}let i=e.PLATFORM_RECORDER.get(r);console.log(`[GA] [DATA] Platform: '${r}'; attempting to use '${i}' to access microphone ...`),e.config.micConfig.recorder=i,e.searchOnGoogle=new e.lib.googleSearch(e.lib),e.lib.recipes.load(e,(()=>{e.sendSocketNotification("INITIALIZED",n),console.log("[GA] [DATA] Google Assistant is initialized.")}))}function error(e,o,s,r=null){return r?console.log("[GA] [DATA] [ERROR]"+o,r.message,r):console.log("[GA] [DATA] [ERROR]"+o),e.sendSocketNotification("NOT_INITIALIZED",{message:s.message,values:s.values})}exports.init=init,exports.parse=parse,exports.error=error;