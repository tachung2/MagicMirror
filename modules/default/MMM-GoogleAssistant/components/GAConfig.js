class GAConfig{constructor(s){const e=["debug","recipes","assistantConfig","responseConfig"];s.config.debug&&(logGA=(...s)=>{console.log("[GA]",...s)}),s.helperConfig={};for(var o=0;o<e.length;o++)s.helperConfig[e[o]]=s.config[e[o]];s.helperConfig.micConfig={recorder:"auto",device:"default"},s.forceResponse=!1,s.assistantResponse=null,s.GAStatus={actual:"standby",old:"standby"},this.callbacks={assistantActivate:e=>{s.activateProcess.assistantActivate(s,e)},postProcess:(e,o,t)=>{s.activateProcess.postProcess(s,e,o,t)},endResponse:()=>{logGA("Conversation Done")},translate:e=>s.translate(e),GAStatus:e=>{s.Hooks.doPlugin(s,"onStatus",{status:e}),s.GAStatus=e,s.sendNotification("ASSISTANT_"+s.GAStatus.actual.toUpperCase())},Gateway:e=>s.Gateway.SendToGateway(s,e),sendSocketNotification:(e,o)=>{s.sendSocketNotification(e,o)}},s.Gateway=new Gateway(s),s.Hooks=new Hooks,s.activateProcess=new activateProcess,s.assistantResponse=new AssistantResponse(s.helperConfig.responseConfig,this.callbacks),s.AssistantSearch=new AssistantSearch(s.helperConfig.assistantConfig);var t={transcriptionHooks:{EXT_Stop:{pattern:s.config.stopCommand,command:"EXT_Stop"}},commands:{EXT_Stop:{notificationExec:{notification:"EXT_STOP"},soundExec:{chime:"close"},displayResponse:!1}}};s.Hooks.parseLoadedRecipe(JSON.stringify(t)),s.assistantResponse.prepareGA(),s.assistantResponse.prepareBackground(),s.assistantResponse.Loading(),s.sendSocketNotification("INIT",s.helperConfig),console.log("[GA] GAConfig Ready")}forceFullScreen(s){s.config.responseConfig.useFullscreen=!0,s.assistantResponse=null,s.assistantResponse=new AssistantResponse(s.helperConfig.responseConfig,this.callbacks)}}