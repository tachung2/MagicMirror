var log=()=>{};function init(e){e.config.debug&&(log=(...e)=>{console.log("[GATEWAY] [SMARTHOME] [HOMEGRAPH]",...e)});let r=e.lib.path.resolve(__dirname,"../credentials.json");e.lib.fs.readFile(r,"utf8",((t,o)=>{let a;if(!o)return console.error("[GATEWAY] [SMARTHOME] [HOMEGRAPH] credentials.json: file not found!"),void e.lib.callback.send(e,"Alert","[HOMEGRAPH] Hey! credentials.json: file not found!");try{a=JSON.parse(o)}catch(r){return console.error("[GATEWAY] [SMARTHOME] [HOMEGRAPH] credentials.json: corrupt!"),void e.lib.callback.send(e,"Alert","[HOMEGRAPH] credentials.json: corrupt!")}a.type&&"service_account"==a.type?e.SmartHome.homegraph=e.lib.googleapis.google.homegraph({version:"v1",auth:new e.lib.GoogleAuthLibrary.GoogleAuth({keyFile:r,scopes:["https://www.googleapis.com/auth/homegraph"]})}):(console.error("[GATEWAY] [SMARTHOME] [HOMEGRAPH] credentials.json: bad format!"),e.lib.callback.send(e,"Alert","[HOMEGRAPH] credentials.json: bad format!"))}))}async function requestSync(e){if(!e.SmartHome.homegraph)return;log("[RequestSync] in Progress...");let r={requestBody:{agentUserId:e.SmartHome.user.user,async:!1}};try{const t=await e.SmartHome.homegraph.devices.requestSync(r);log("[RequestSync] Done.",t.statusText)}catch(r){r.code?(console.error("[GATEWAY] [SMARTHOME] [HOMEGRAPH] [RequestSync] Error:",r.code,r.errors),e.lib.callback.send(e,"Alert","[requestSync] Error "+r.code+" - "+r.errors[0].message+" ("+r.errors[0].reason+")")):(console.error("[GATEWAY] [SMARTHOME] [HOMEGRAPH] [RequestSync]",r.toString()),e.lib.callback.send(e,"Alert","[requestSync] "+r.toString()))}}async function queryGraph(e){if(!e.SmartHome.homegraph)return;let r={requestBody:{requestId:"Gateway-"+Date.now(),agentUserId:e.SmartHome.user.user,inputs:[{payload:{devices:[{id:"MMM-GoogleAssistant"}]}}]}};try{const t=await e.SmartHome.homegraph.devices.query(r);log("[QueryGraph]",JSON.stringify(t.data))}catch(e){console.log("[GATEWAY] [SMARTHOME] [HOMEGRAPH] [QueryGraph]",e.code?e.code:e,e.errors?e.errors:"")}}async function updateGraph(e){if(!e.SmartHome.homegraph)return;let r=e.SmartHome.EXT,t=e.SmartHome.smarthome,o=e.SmartHome.oldSmartHome;if(!e.lib._.isEqual(t,o)){let o={online:!0};r["EXT-Screen"]&&(o.on=t.Screen),r["EXT-Volume"]&&(o.currentVolume=t.Volume,o.isMuted=t.VolumeIsMuted),r["EXT-FreeboxTV"]&&t.TvIsPlaying?o.currentInput="EXT-FreeboxTV":r["EXT-SpotifyCanvasLyrics"]&&t.Lyrics?o.currentInput="EXT-SpotifyCanvasLyrics":r["EXT-Pages"]&&(o.currentInput="page "+t.Page),r["EXT-Spotify"]&&(o.currentApplication=t.SpotifyIsConnected?"spotify":"home");let a={requestBody:{agentUserId:e.SmartHome.user.user,requestId:"Gateway-"+Date.now(),payload:{devices:{states:{"MMM-GoogleAssistant":o}}}}};try{const r=await e.SmartHome.homegraph.devices.reportStateAndNotification(a);200!=r.status&&log("[ReportState]",r.data,o,r.status,r.statusText)}catch(e){console.error("[GATEWAY] [SMARTHOME] [HOMEGRAPH] [ReportState]",e.code?e.code:e,e.errors?e.errors:"")}}}exports.init=init,exports.requestSync=requestSync,exports.queryGraph=queryGraph,exports.updateGraph=updateGraph;