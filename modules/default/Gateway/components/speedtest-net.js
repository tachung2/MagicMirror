"use strict";class speedtest_net{constructor(e={},s){this.lib=s,this.lib.sha256File=this.lib.util.promisify(this.lib.sha256_file),this.defaultBinaryVersion="1.0.0",this.platforms=[{platform:"darwin",arch:"x64",pkg:"macosx.tgz",bin:"macosx",sha:"8d0af8a81e668fbf04b7676f173016976131877e9fbdcd0a396d4e6b70a5e8f4"},{platform:"win32",arch:"x64",pkg:"win64.zip",bin:"win-x64.exe",sha:"64054a021dd7d49e618799a35ddbc618dcfc7b3990e28e513a420741717ac1ad"},{platform:"linux",arch:"ia32",pkg:"i386-linux.tgz",bin:"linux-ia32",sha:"828362e559e53d80b3579df032fe756a0993cf33934416fa72e9d69c8025321b"},{platform:"linux",arch:"x64",pkg:"x86_64-linux.tgz",bin:"linux-x64",sha:"5fe2028f0d4427e4f4231d9f9cf70e6691bb890a70636d75232fe4d970633168"},{platform:"linux",arch:"arm",pkg:"arm-linux.tgz",bin:"linux-arm",sha:"0fa7b3237d0fe4fa15bc1e7cb27ccac63b02a2679b71c2879d59dd75d3c9235d"},{platform:"linux",arch:"armhf",pkg:"armhf-linux.tgz",bin:"linux-armhf",sha:"04b54991cfb9492ea8b2a3500340e7eeb78065a00ad25a032be7763f1415decb"},{platform:"linux",arch:"arm64",pkg:"aarch64-linux.tgz",bin:"linux-arm64",sha:"073684dc3490508ca01b04c5855e04cfd797fed33f6ea6a6edc26dfbc6f6aa9e"},{platform:"freebsd",arch:"x64",pkg:"freebsd.pkg",bin:"freebsd-x64",sha:"f95647ed1ff251b5a39eda80ea447c9b2367f7cfb4155454c23a2f02b94dd844"}],this.progressPhases={ping:2,download:15,upload:6},this.totalTime=Object.keys(this.progressPhases).reduce(((e,s)=>e+this.progressPhases[s]),0),Object.keys(this.progressPhases).forEach((e=>this.progressPhases[e]/=this.totalTime)),this.options=e,this.aborted=!1,this.errorLines=[],this.priorProgress=0,this.lastProgress=0,this.currentPhase,this.result=void 0}async start(){const{acceptLicense:e=!1,acceptGdpr:s=!1,progress:t=(()=>{}),serverId:r,sourceIp:i,host:a,binaryVersion:o,verbosity:n=0}=this.options,h=this.options.binary||await this.ensureBinary({binaryVersion:o});this.args=["-f","json","-P","8"];for(let e=0;e<n;e++)this.args.push("-v");this.options.progress&&this.args.push("-p"),e&&this.args.push("--accept-license"),s&&this.args.push("--accept-gdpr"),r&&this.args.push("-s",r),i&&this.args.push("-i",i),a&&this.args.push("-o",a);const p=this.lib.childProcess.spawn(h,this.args,{windowsHide:!0}),{promise:c,resolve:l,reject:d}=this.pendingPromise(),f=e=>{this.aborted=!0,d(e)};var b=(e,s)=>{if(!this.aborted){if(/^{/.test(s)){let r;try{r=JSON.parse(s)}catch(e){}if(r){if(r.timestamp&&(r.timestamp=new Date(r.timestamp)),r.type){const e=r[r.type];e&&(this.currentPhase!==r.type&&this.progressPhases[r.type]&&(this.priorProgress+=this.progressPhases[this.currentPhase]||0,this.currentPhase=r.type),"number"==typeof e.progress&&this.progressPhases[r.type]&&(r.progress=this.priorProgress+this.progressPhases[r.type]*e.progress))}else(r.suite||r.app||r.servers)&&(r.type="config");return void 0===r.progress&&(r.progress=this.priorProgress),this.lastProgress=r.progress=Math.max(r.progress,this.lastProgress),r.error?f(new Error(r.error)):"log"===r.type&&"error"===r.level?f(new Error(r.message)):"result"===r.type?(delete r.progress,delete r.type,void(this.result=r)):void(t&&t(r))}}s.trim()&&e&&(/] \[(info|warning)]/.test(s)||this.errorLines.push(s))}};this.lineify(p.stderr,b.bind(null,!0)),this.lineify(p.stdout,b.bind(null,!1)),p.on("exit",l),p.on("error",(e=>{f(new Error(this.errorLines.concat(e.message).join("\n")))}));try{await c}finally{const e=p.pid;p.kill(),this.lib.kill(e)}if(this.errorLines.length){const e=/License acceptance recorded. Continuing./,s=/To accept the message please run speedtest interactively or use the following:[\s\S]*speedtest --accept-license/,t=/To accept the message please run speedtest interactively or use the following:[\s\S]*speedtest --accept-gdpr/;let r=this.errorLines.join("\n");if(r=e.test(r)?"":s.test(r)?r.replace(s,"To accept the message, pass the acceptLicense: true option"):t.test(r)?r.replace(t,"To accept the message, pass the acceptGdpr: true option"):r.replace(/===*[\s\S]*about\/privacy\n?/,""),r=r.trim(),r)throw new Error(r)}return this.aborted=!0,this.result}fileExists(e){return new Promise((s=>this.lib.fs.access(e,this.lib.fs.F_OK,(e=>s(!e)))))}chMod(e,s){return new Promise(((t,r)=>this.lib.fs.chmod(e,s,(e=>{e&&r(e),t()}))))}appendFileName(e,s){const t=this.lib.path.extname(e);return`${e.slice(0,-t.length)}${s}${t}`}async ensureBinary({platform:e=process.platform,arch:s=process.arch,binaryVersion:t=this.defaultBinaryVersion}={}){const r=this.platforms.find((t=>t.platform===e&&t.arch===s));if(!r)throw new Error(`${e} on ${s} not supported`);const i=this.lib.path.join(__dirname,"../tools/SpeedTest/binaries");this.lib.mkdirp.sync(i);const a=this.appendFileName(r.bin,`-${t}`),o=this.lib.path.join(i,a);if(!await this.fileExists(o)){const e=this.lib.path.join(__dirname,"../tools/SpeedTest/pkg");this.lib.mkdirp.sync(e);const n=this.appendFileName(r.pkg,`-${t}`),h=this.lib.path.join(e,n);if(!await this.fileExists(h)){const e="https://install.speedtest.net/app/cli/ookla-speedtest-$v-$p".replace("$v",t).replace("$p",r.pkg);try{await this.download(e,h)}catch(s){throw new Error(`Error downloading speedtest CLI executable from ${e}: ${s.message}`)}}const p=await this.lib.sha256File(h);if(t===this.defaultBinaryVersion&&p!==r.sha)throw new Error(`SHA mismatch ${n}, found "${p}", expected "${r.sha}"`);if(await this.lib.decompress(h,i,{plugins:[this.lib.decompressTar(),this.lib.decompressTarbz2(),this.lib.decompressTargz(),this.lib.decompressUnzip(),this.lib.decompressTarXz()],filter:e=>/(^|\/)speedtest(.exe)?$/.test(e.path),map:e=>(e.path=a,e)}),!await this.fileExists(o))throw new Error(`Error decompressing package "${h}"`);await this.chMod(o,493)}return o}lineify(e,s){let t="";e.setEncoding("utf8"),e.on("data",(e=>{let r;for(t+=e;r=/(^.*?)(\r)?\n/.exec(t);)s(r[1]),t=t.slice(r[0].length)})),e.on("end",(()=>{t&&s(t)}))}pendingPromise(){let e,s;return{promise:new Promise(((t,r)=>{e=t,s=r})),resolve:e,reject:s}}download(e,s){return new Promise((t=>{this.lib.https.get(e,(e=>{const r=this.lib.fs.createWriteStream(s);e.pipe(r),r.on("finish",(()=>{r.close(),t()}))}))}))}}module.exports=speedtest_net;